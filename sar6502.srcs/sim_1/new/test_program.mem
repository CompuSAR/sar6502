@00a9 97                                // test_program.s:19 lda_zp_test: .byte $97
@0100 7a                                // test_program.s:22 .dc $ff,$7a         ; Put stack in known state
7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a   // Array
@01ff 7a                                // test_program.s:23 .byte $7a           ; Due to a limitation of our lst parser, need to mark the end point
@0300 ea                                // test_program.s:28 nop
@0301 ea                                // test_program.s:29 nop
@0302 ea                                // test_program.s:30 nop
@0303 a9 03                             // test_program.s:31 lda #$03
@0305 20 ef 04                          // test_program.s:32 jsr flags_dump
@0308 a5 a9                             // test_program.s:33 lda lda_zp_test     ; Make sure we don't treat the operand as an opcode
@030a 20 ef 04                          // test_program.s:34 jsr flags_dump
@030d ad 21 6d                          // test_program.s:36 lda lda_abs_test
@0310 20 ef 04                          // test_program.s:37 jsr flags_dump
@0313 0e 10 85                          // test_program.s:41 asl asl_abs_test
@0316 20 ef 04                          // test_program.s:42 jsr flags_dump
@0319 d0 f8                             // test_program.s:43 bne asl_abs_loop
@031b 8d 00 02                          // test_program.s:45 sta FINISHED_TRIGGER
@031e 00                                // test_program.s:46 .byte 00
@031f a2 ff                             // test_program.s:49 ldx #$ff
@0321 9a                                // test_program.s:50 txs
@0322 a9 03                             // test_program.s:51 lda #start/256
@0324 48                                // test_program.s:52 pha
@0325 a9 00                             // test_program.s:53 lda #start%256
@0327 48                                // test_program.s:54 pha
@0328 a9 44                             // test_program.s:55 lda #INTMASK+OVERFLOW
@032a 48                                // test_program.s:56 pha
@032b 40                                // test_program.s:57 rti
@032c 00                                // test_program.s:58 .byte 00
@04ef 08                                // test_program.s:63 php
@04f0 b0 0c                             // test_program.s:64 bcs .1
@04f2 90 0a                             // test_program.s:65 bcc .1
@04f4 70 04                             // test_program.s:67 .2  bvs .3
@04f6 50 02                             // test_program.s:68 bvc .3
@04f8 80 08                             // test_program.s:70 .4  bra .5
@04fa d0 fc                             // test_program.s:72 .3  bne .4
@04fc f0 fa                             // test_program.s:73 beq .4
@04fe 30 f4                             // test_program.s:75 .1  bmi .2
@0500 10 f2                             // test_program.s:76 bpl .2
@0502 28                                // test_program.s:79 plp
@0503 60                                // test_program.s:80 rts
@0504 00                                // test_program.s:81 .byte 00
@0505 00                                // test_program.s:85 brk
@6d21 74                                // test_program.s:88 lda_abs_test    .byte $74
@8510 01                                // test_program.s:91 asl_abs_test    .byte $1
@fffa 05 05                             // test_program.s:94 nmi_vector:     .word nmi_handler
@fffc 1f 03                             // test_program.s:95 reset_vector:   .word reset_handler
@fffe 05 05                             // test_program.s:96 irq_vector:     .word int_handler
