@00a9 07                                // test_program.s:19 lda_zp_test: .byte $07
@0100 7a                                // test_program.s:22 .dc $ff,$7a         ; Put stack in known state
7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a   // Array
@01ff 7a                                // test_program.s:23 .byte $7a           ; Due to a limitation of our lst parser, need to mark the end point
@0300 ea                                // test_program.s:28 nop
@0301 ea                                // test_program.s:29 nop
@0302 ea                                // test_program.s:30 nop
@0303 a9 03                             // test_program.s:31 lda #$03
@0305 a5 a9                             // test_program.s:32 lda lda_zp_test     ; Make sure we don't treat the operand as an opcode
@0307 8d 00 02                          // test_program.s:34 sta FINISHED_TRIGGER
@030a a2 ff                             // test_program.s:37 ldx #$ff
@030c 9a                                // test_program.s:38 txs
@030d a9 03                             // test_program.s:39 lda #start/256
@030f 48                                // test_program.s:40 pha
@0310 a9 00                             // test_program.s:41 lda #start%256
@0312 48                                // test_program.s:42 pha
@0313 a9 44                             // test_program.s:43 lda #INTMASK+OVERFLOW
@0315 48                                // test_program.s:44 pha
@0316 40                                // test_program.s:45 rti
@0317 00                                // test_program.s:49 brk
@fffa 17 03                             // test_program.s:52 .word nmi_handler
@fffc 0a 03                             // test_program.s:53 .word reset_handler
@fffe 17 03                             // test_program.s:54 .word int_handler
